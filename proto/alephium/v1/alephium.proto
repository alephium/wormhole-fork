syntax = "proto3";

package alephium.v1;

option go_package = "github.com/certusone/wormhole/node/pkg/proto/alephium/v1;alephiumv1";

import "google/api/annotations.proto";

service ContractService {
    rpc GetRemoteTokenWrapperAddress (GetRemoteTokenWrapperAddressRequest) returns (GetTokenWrapperAddressResponse) {
        option (google.api.http) = {
            get: "/v1/alph/remote_token_wrapper/{token_id}"
        };
    }

    rpc GetLocalTokenWrapperAddress (GetLocalTokenWrapperAddressRequest) returns (GetTokenWrapperAddressResponse) {
        option (google.api.http) = {
            get: "/v1/alph/local_token_wrapper/{token_id}/{chain_id}"
        };
    }

    rpc GetTokenBridgeForChainAddress (GetTokenBridgeForChainAddressRequest) returns (GetTokenBridgeForChainAddressResponse) {
        option (google.api.http) = {
            get: "/v1/alph/token_bridge_for_chain/{chain_id}"
        };
    }
}

message GetRemoteTokenWrapperAddressRequest {
    // remote token id hex string
    string token_id = 1;
}

message GetLocalTokenWrapperAddressRequest {
    // local token address(base58 encoded)
    string token_id = 1;
    // remote chain id
    uint32 chain_id = 2;
}

message GetTokenWrapperAddressResponse {
    // token wrapper contract address
    string token_wrapper_address = 1;
}

message GetTokenBridgeForChainAddressRequest {
    uint32 chain_id = 1;
}

message GetTokenBridgeForChainAddressResponse {
    string token_bridge_for_chain_address = 1;
}
