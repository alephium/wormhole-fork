name: Unit Test
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
jobs:
  # Verify whether the Makefile builds the node (no dependencies other than Go)
  node:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.6'
      - run: make node && make guardian-test

  ethereum:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: cd ethereum && make test

  ethereum-upgrade:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: cd clients/js && make install
      - run: curl -L https://foundry.paradigm.xyz | bash
      - run: $HOME/.foundry/bin/foundryup
      - run: cd ethereum && PATH=$PATH:$HOME/.foundry/bin/ make test-upgrade

  alephium:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16, 18]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run tests
        working-directory: ./alephium
        run: |
          npm audit --production
          npm ci
          npx @alephium/cli devnet start
          npm run compile
          npm run build
          npm test
          npx @alephium/cli devnet stop
          npm run lint

  sdk:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16, 18]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.6'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run tests
        working-directory: .
        run: |
          cd tools && npm ci && cd ..
          make generate-proto-sdk
          cd ethereum && npm ci && npm run build
          cd ../sdk/js
          npm ci && npm run build && npm run test
